name: FlaskAPI TEST

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install requests
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt

      - name: Run Flask API tests
        working-directory: app
        run: pytest test_app.py

      - name: Run Flask API server on port 5000
        working-directory: app
        run: |
          # Start the Flask app in the background on port 5000
          # Assuming app.py is configured to use the port specified by the PORT environment variable
          PORT=5000 python app.py &

          # Store the background job's PID
          APP_PID=$!

          # Wait for 10 seconds to give the app time to start and stabilize
          sleep 10

          # Check if the app is still running
          if kill -0 $APP_PID 2>/dev/null; then
            echo "App is running successfully on port 5000"
            
            # Optionally perform any checks here (e.g., using curl to ping the server)

            # Stop the Flask app by killing its process
            kill $APP_PID
          else
            echo "App failed to start or crashed"
            exit 1
          fi
